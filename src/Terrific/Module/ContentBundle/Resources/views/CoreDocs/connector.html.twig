<div class="rich">
    <p>Lets your modules stay in touch with each other.</p>
        <p>
            <em>Modules</em> are intended to be modular and therefore to work on their own. So why do we need to connect
            our <em>Modules</em> with each other?
        </p>

        <p> As coupled with OOCSS, TerrificJS modules most often have a visual counterpart that &ndash; due to the
            nature of frontend &ndash; necessarily has to be rectangular. So sometimes you will have to split up a
            functionality across multiple modules. Thinking of filtering of e.g. twitter messages, you could have a
            module «Messages» for displaying the messages and another module «Filter» for selecting the appropriate
            filters.
        </p>

        <p>
            Regarding the implementation of connectors, almost everything you need to know has already been covered
            elsewhere.
        </p>
        <ul>
            <li>In the <a title="" href="{{ path('core_docs_basics') }}#conventions">Conventions</a> chapter you learn how to connect
                your <em>Modules</em> with each other by using the HTML5 data attribute.
            </li>
            <li>The <em>Module</em> chapter introduces you the <a title="" href="{{ path('core_docs_module') }}#fire">fire</a> method
                that serves you as communication device to stay in touch with your connected <em>Modules</em>.
            </li>
        </ul>
        <p>
            The only thing that has not been covered so far are custom connectors. In most cases you do not need
            them &ndash; for all other cases… here is how ;-)
        </p>

        <p>… coming soon</p>
    </div>
</div>