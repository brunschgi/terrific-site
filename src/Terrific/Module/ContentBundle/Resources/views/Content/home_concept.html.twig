<span class="slogan">Build your own Legos</span>
<div class="line block">
    <div class="unit size1of3">
    </div>
    <div class="lastUnit rich">
        <h3>What Terrific can do for you</h3>
        <ul>
            <li>Eliminates spaghetti code and brain knots forever</li>
            <li>Modularizes your HTML, CSS and JS code</li>
            <li>Fasten and streamlines your development</li>
            <li>Helps you to create highly maintainable frontends</li>
            <li>Based on a <a href="{{ path('core') }}" title="">rock-solid core</a> that has been tested in
                countless
                big and small projects
            </li>
        </ul>
    </div>
</div>
<div class="line block">
    <div class="unit size1of2 rich">
        <h3>Module Structure</h3>
        <ul class="dir">
            <li>
                <mark>Hero/hero.html</mark>
                – Module Markup
            </li>
            <li>
                <mark>Hero/css/hero.css</mark>
                – Module CSS
            </li>
            <li>
                <mark>Hero/css/skin/*.css</mark>
                – Module CSS Skins (optional)
            </li>
            <li>
                <mark>Hero/js/Tc.Module.Hero.js</mark>
                – Module JS (optional)
            </li>
            <li>
                <mark>Hero/js/skin/*.js</mark>
                – Module JS Skins (optional)
            </li>
        </ul>
    </div>
    <div class="lastUnit">
    </div>
</div>
<div class="line block">
    <div class="unit size1of3">
<div class="bubble">
{% highlight 'html' 'pygment' %}
<!-- Hero/hero.html -->
<div class="mod modHero">
<!-- here comes your markup -->
</div>

<!-- another hero module instance -->
<div class="mod modHero">
<!-- your other markup -->
</div>
{% endhighlight %}
<span class="arrow"></span>
</div>
            <div class="promo">
                <h4 class="h3">Give your HTML some semantics…</h4>

                <p class="base">
                    Simply mark your modules by giving them a name. This will do the trick and everything is wired
                    up
                    for
                    you in the background.
                </p>
            </div>
        </div>
    <div class="unit size1of3">
<div class="bubble">
{% highlight 'css' 'pygment' %}
/* Hero/css/hero.css */

.modHero {
  ...
}

.modHero ul {
  ...
}


{% endhighlight %}
<span class="arrow"></span>
</div>
            <div class="promo">
                <h4 class="h3">Write CSS in OOCSS manner…</h4>

                <p class="base">
                    Write encapsulating CSS rules in OOCSS manner. This prevents you from strange side-effects when
                    using your modules in different parts of your layout.
                </p>
            </div>
        </div>
    <div class="lastUnit">
<div class="bubble">
{% highlight 'js' 'pygment' %}
/* Hero/js/Tc.Module.Hero.js */
(function($) {
  Tc.Module.Hero = Tc.Module.extend({
    dependencies: function() { },
    beforeBinding: function() { },
    onBinding: function() { },
    afterBinding: function() { }
  });
})(Tc.$);
{% endhighlight %}
<span class="arrow"></span>
</div>
            <div class="promo">
                <h4 class="h3">Flavor it with a little JS magic…</h4>

                <p class="base">
                    Create a TerrificJS module with the same name, fill it with your jQuery code and let the magic
                    happen!
                </p>
            </div>
        </div>
</div>
<div class="line block">
    <div class="unit size1of3">
        &nbsp;
    </div>
    <div class="lastUnit rich">
        <h3>It's like playing Lego</h3>

        <p>
            Your module legos are prepared. Now arrange them in your layout in every combination you can think
            of
            and build the new killer frontend! And don't forget to stay calm… just because everything is soo
            terrific!
        </p>
    </div>
</div>

